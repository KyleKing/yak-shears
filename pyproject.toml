[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.12",
] # https://pypi.org/classifiers/
dependencies = [
  "beartype >=0.19.0",
  "starlette>=0.46.2",
  "uvicorn>=0.34.2",
]
description = "Yak Shears Web App"
license = "MIT"
maintainers = []
name = "yak_shears"
repository = "https://github.com/KyleKing/yak-shears-py"
requires-python = ">=3.12.9"
version = "0.0.0"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
enable_error_code = ["ignore-without-code", "possibly-undefined", "redundant-expr", "truthy-bool"]
extra_checks = true
files = ["tests", "yak_shears"]
no_implicit_reexport = true
plugins = [
]
python_version = "3.9"
show_column_numbers = true
show_error_codes = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pyright]
include = ["tests", "yak_shears"]
pythonVersion = "3.9"

[tool.ruff]
# Docs: https://github.com/charliermarsh/ruff
# Tip: uv run ruff rule RUF100
line-length = 120
target-version = 'py39'

[tool.ruff.lint]
ignore = [
  'ANN002', # Missing type annotation for `*args`
  'ANN003', # Missing type annotation for `**kwargs`
  'ANN401', # Dynamically typed expressions (typing.Any) are disallowed in `pop_key`
  'BLE001', # Do not catch blind exception: `Exception`
  'COM812', # ruff formatter enforces consistent use of trailing commas, making the rule redundant
  'CPY001', # Missing copyright notice at top of file
  'D203', # "1 blank line required before class docstring" (Conflicts with D211)
  'D213', # "Multi-line docstring summary should start at the second line" (Conflicts with D212)
  'DOC501', # Raised exception `RuntimeError` missing from docstring
  'EM101', # Exception must not use a string literal, assign to variable first
  'FIX001', # Line contains FIXME
  'FIX002', # Line contains TODO
  'FIX004', # Line contains HACK
  'PLR0913', # Too many arguments in function definition (6 > 5)
  'TC001', # Move application import `tail_jsonl.config.Config` into a type-checking block (Conflicts with Beartype)
  'TC002', # Move third-party import `rich.console.Console` into a type-checking block (Conflicts with Beartype)
  'TC003', # Move standard library import `argparse` into a type-checking block (Conflicts with Beartype)
  'TD001', # Invalid TODO tag: `FIXME`
  'TD002', # Missing author in TODO; try: `# TODO(<author_name>): ...`
  'TD003', # Missing issue link on the line following this TODO
  'TRY003', # Avoid specifying long messages outside the exception class
]
preview = true
select = ['ALL']
unfixable = [
  'ERA001', # Commented out code
]

[tool.ruff.lint.isort]
known-first-party = ['yak_shears']

[tool.ruff.lint.per-file-ignores]
'tests/*.py' = [
  'ANN001', # Missing type annotation for function argument
  'ANN201', # Missing return type annotation for public function
  'ANN202', # Missing return type annotation for private function `test_make_diffable`
  'ARG001', # Unused function argument: `line`
  'D100', # Missing docstring in public module
  'D103', # Missing docstring in public function
  'PLC2701', # Private name import `_<>` from external module
  'PT004', # flake8-pytest-style: fixture does not return
  'S101', # Use of `assert` detected
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.tomlsort]
all = true
in_place = true
trailing_comma_inline_array = true

[tool.uv]
dev-dependencies = [
  "ruff>=0.11.10",
]
required-version = ">=0.7.3"
